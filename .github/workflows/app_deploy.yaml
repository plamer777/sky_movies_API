name: build and deploy app
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    env:
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
    steps:
      - name: clone project
        uses: actions/checkout@v2
      - name: prepare dotenv file
        run: cat .env_ci | envsubst > .env
      - name: build image
        run: docker build -t plamer88/coursework_4:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{secrets.DOCKER_PASS_TOKEN}} | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin
      - name: docker push
        run: docker push plamer88/coursework_4:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
    steps:
      - name: clone project
        uses: actions/checkout@v2
      - name: prepare docker-compose file
        run: cat docker-compose-ci.yaml | envsubst > docker-compose.yaml
      - name: set up requirements
        run: pip install -r requirements.txt
      - name: create tables
        run: python3 create_tables.py
      - name: fill up tables
        run: python3 load_fixtures
      - name: copy docker-compose.yaml to server
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.SERVER_IP}}
          username: ${{secrets.SERVER_LOGIN}}
          password: ${{secrets.SERVER_PASS}}
          source: docker-compose.yaml,${{secrets.DATABASE_NAME}}
          target: sky_movies
      - name: start application
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.SERVER_IP}}
          username: ${{secrets.SERVER_LOGIN}}
          password: ${{secrets.SERVER_PASS}}
          script: |
            cd sky_movies
            echo ${{secrets.SERVER_PASS}} | sudo -S docker compose up -d

